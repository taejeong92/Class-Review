<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="org.doit.ik.aop2" />
	
	<!-- 
	<bean id="calc" class="org.doit.ik.aop2.CalculatorImpl2"></bean>
	<bean id="logPrintAroundAdvice" class="org.doit.ik.aop2.advice.LogPrintAroundAdvice"></bean>
	 -->
	
	<!-- 스프링 AOP -> 프록시  -->    
	<bean id="calcProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
	   <!-- 1. 핵심 관심 사항-> 실제 객체(target) 설정 -->
	   <property name="target" ref="calc"></property>
	   <!-- 2. pointcut 설정 -->
	   <property name="proxyInterfaces">
	     <list>
	       <value>org.doit.ik.aop.Calculator</value>
	     </list>
	   </property>
	   <!-- 3. advice 설정 -->
	   <property name="interceptorNames">
	     <list>
	       <value>logPrintAroundAdvice</value>
	       <value>logPrintBeforeAdvice</value>
	       <value>logPrintAfterReturningAdvice</value>
	     </list>
	   </property>
	</bean>
	    
</beans>



